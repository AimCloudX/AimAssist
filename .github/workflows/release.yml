name: Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore AimAssist.sln
      working-directory: ./
    
    - name: Build
      run: dotnet build AimAssist.sln --configuration Release --no-restore
      working-directory: ./
    
    - name: Publish
      run: dotnet publish src/AimAssist/AimAssist/AimAssist.csproj --configuration Release --framework net8.0-windows --self-contained true --runtime win-x64 --output ./publish
      working-directory: ./
    
    - name: Get version
      id: version
      run: |
        $version = (Get-Date -Format "yyyy.MM.dd.HHmm")
        echo "version=$version" >> $env:GITHUB_OUTPUT
      shell: powershell
    
    - name: Create Release Archive
      run: |
        Compress-Archive -Path ./publish/* -DestinationPath "AimAssist-v${{ steps.version.outputs.version }}.zip"
      shell: powershell
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.version }}
        release_name: AimAssist v${{ steps.version.outputs.version }}
        body: |
          ## Changes
          - Automated release from main branch
          
          ## Installation
          1. Download the zip file
          2. Extract to desired location
          3. Run AimAssist.exe
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./AimAssist-v${{ steps.version.outputs.version }}.zip
        asset_name: AimAssist-v${{ steps.version.outputs.version }}.zip
        asset_content_type: application/zip
